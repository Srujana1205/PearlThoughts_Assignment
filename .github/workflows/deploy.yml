name: Deploy Medusa to ECS

on:
  push:
    branches: [develop]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build & Push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY/medusa:latest .
          docker push $ECR_REGISTRY/medusa:latest

      - name: Force ECS Service Update
        run: |
          aws ecs update-service \
            --cluster medusa-cluster \
            --service medusa-service \
            --force-new-deployment






#name: Deploy Medusa to ECS

#on:
  #push:
    #branches: [main]

#jobs:
  #deploy:
   # runs-on: ubuntu-latest

    #steps:
     # - name: Checkout
      #  uses: actions/checkout@v3
#
 #     - name: Configure AWS
  #      uses: aws-actions/configure-aws-credentials@v2
   #     with:
    #      aws-access-key-id: ${ secrets.AWS_ACCESS_KEY_ID }}                     it should br {{}}
    #     aws-secret-access-key: ${ secrets.AWS_SECRET_ACCESS_KEY }}
     #     aws-region: us-east-1

      #- name: Login to ECR
       # uses: aws-actions/amazon-ecr-login@v1

      #- name: Build and Push Docker image
      #  run: |
       #   docker build -t medusa .
        #  docker tag medusa:latest ${{ steps.login-ecr.outputs.registry }}/medusa:latest
         # docker push ${{ steps.login-ecr.outputs.registry }}/medusa:latest

#      - name: Deploy ECS Service
 #       run: |
  #        aws ecs update-service --cluster medusa-cluster --service medusa-service --force-new-deployment
#